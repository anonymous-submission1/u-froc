import numpy as np
from dpipe.dataset.wrappers import apply, cache_methods

from ufroc.dataset.egd import EGD, Rescale3D
from ufroc.dataset.utils import scale_mri, get_n_tumors
from ufroc.paths import EGD_DATA_PATH


data_path = EGD_DATA_PATH

# if `voxel_spacing[i]` is `None` when `i`-th dimension will be used without scaling
voxel_spacing = (None, None, None)  # is (1, 1, 1) by default -- it is close to gamma_knife one

dataset = apply(cache_methods(apply(
    apply(Rescale3D(EGD(data_path, 'meta.csv'), voxel_spacing), load_image=scale_mri),
    load_image=np.float16, load_segm=np.bool_,)), load_image=np.float32, load_segm=np.float32)

n_tumors = get_n_tumors(dataset, train_ids)


def egd_train_val_test_split(df):
    _ids = df[df['Original scan'] == 'FLAIR'].index.tolist()
    return [[_ids, _ids, _ids]]  # just test needed


split = egd_train_val_test_split(dataset.df)
